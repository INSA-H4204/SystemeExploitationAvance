#ifndef SCHED_H
#define SCHED_H

#include "types.h"


typedef void (*func_t) ( void);
typedef enum{
  WAITING,
  READY,	
  STOPPED,
  ZOMBIE,
  ACTIVE,
  TERMINATED
} Process_state;


struct ctx_s {
	uint32 *sp;
	uint32 *lr;
};



struct pcb_s {
	Process_state state;
	struct ctx_s * ctx;
	struct pcb_s * next;
	void* args;
	func_t f; 
	unsigned int priority;
};

void init_ctx(struct ctx_s* ctx, func_t f, unsigned int stack_size);

void init_pcb(struct pcb_s* pcb, func_t f, unsigned int stack_size,unsigned int priority);

void __attribute__ ((naked)) switch_to(struct ctx_s* ctx);

void create_process(func_t f, void* args, unsigned int stack_size,unsigned int priority, unsigned int waiting_time);
void start_current_process();
void elect();

void __attribute__ ((naked)) ctx_switch();
void __attribute__ ((naked)) ctx_switch_from_irq();

#endif
